#+TITLE: Monitoring @ Avencall
#+OPTIONS: num:nil
#+OPTIONS: toc:nil 
#+OPTIONS: reveal_title_slide:nil
#+OPTIONS: reveal_slide_number:nil
#+REVEAL_HLEVEL: 1
#+REVEAL_THEME: solarized
#+REVEAL_EXTRA_CSS: style.css


* Monitoring et Supervision d'un système de communications
Jean-Pierre Thomasset @ XiVO

* Qui sommes-nous ?
[[./img/logo_xivo.png]]
- Editeur Open source
- Equipe R&D
- Equipe Expert 
- Equipe Support

** R&D Team
- Principalement des développeurs
- Adepte du TDD
- Wanabee FP
- 0 "DevOps"

** XiVO Solution
[[./img/logo_xivo.png]]

- IPBX Open Source basé sur Asterisk™ 
- Gestion des postes téléphonique
- Routage d'appel
- Couplage téléphonie informatique
- Solution pour Centre d'appel
- Solution de communication unifiée

** Warning
[[./img/dunning-kruger-effect.jpg]]

* La supervision
#+ATTR_REVEAL: :frag (appear)
- C'est ennuyant !
- La plupart du temps, ça ne sert à rien
#+ATTR_REVEAL: :frag appear
#+BEGIN_QUOTE
“En supervision, on est des nazes !” @@html:<div align="right"><i>E.A.</i></div>@@
#+END_QUOTE
#+ATTR_REVEAL: :frag appear
(Enfin, surtout personne ne veut le faire)

** Alors, pourquoi superviser ?
#+ATTR_REVEAL: :frag (appear)
- Detecter les crash, Vraiment ?
- Detecter les problèmes plus subtils
- Anticiper les problèmes

** Mais aussi
#+ATTR_REVEAL: :frag (appear)
- Valider des livrables
- Analyser Post-mortem
- Personne ne veut superviser manuellement

** Les raisons chez nous ?
#+ATTR_REVEAL: :frag appear
[[./img/sky-limit.jpg]]

* Nos premières tentatives

** Home Made
[[./img/mcgyver.jpg]]

** Mais...
#+ATTR_REVEAL: :frag (appear)
- Fonctionnalités limitées
- Difficile à maintenir
- Embarqué sur chaque serveur ⚠
- Pas de consolidation

** Evaluation solutions
#+ATTR_REVEAL: :frag (appear)
- Nagios
- Shinken
- Zabbix
- Grafana, Graphite, collectd

** Grafana, Graphite, Collectd
#+ATTR_REVEAL: :frag (appear)
- Facilité de déploiement / mise à jour
- Nécessite peu de maintenance
- Collecteurs disponibles directement
- Courbe d'apprentissage rapide
- Basique mais simple
- Developer friendly

** Mise en oeuvre
#+ATTR_REVEAL: :frag (appear)
- Docker pour la partie serveur
- `collectd` pour la collecte des mesures génériques
- Push depuis les applications (simple socket)

* Metriques

** Données non-structurées
[[./img/log.jpg]]

** Données structurées
#+ATTR_REVEAL: :frag (appear)
- Données horodatées
- Données numériques
- Source
- Categorisation (Naming/Tagging)

** Système
- CPU
- Mémoire globale/services
- Espace Disque
- IO
- Failures Disque/IO/...

** Environnement
- Etat Trunk SIP
- Etat T2
- Etat Postes
- Glissement d'horloge

** Application
- Appels fantomes
- Volumes d'appels
- Evènements reçus/traités
- JVM Memory Allocation
- Compteurs internes

** Et même l'intégration continue !
- Supervision de la charge générée
- Supervision des mises à jours

** Limites
#+ATTR_REVEAL: :frag (appear)
- La supervision n'est pas de la BI
- Distinction entre les données métier et les données techniques
- Sécurité des données
- Ethique ! (données personnelles ou sensibles)

* Stockage
Doit être pensé très tôt.
#+ATTR_REVEAL: :frag (appear)
- Rétention
- Granularité
- La combinaison des deux

* Restitution
Deux cas d'usages:
#+ATTR_REVEAL: :frag (appear)
- Supervision haut niveau (Tableau de bord)
- Analyse fine post-mortem de quelques KPIs

* Fiabilisation des données
Un système de supervision est un système qui évolue !
#+ATTR_REVEAL: :frag (appear)
- En fonction des applications
- En fonction des besoins
- En fonction de l'expérience

#+ATTR_REVEAL: :frag appear
Nécessaire pour l'alerting !

* Alerting
#+ATTR_REVEAL: :frag (appear)
- Ce n'est pas un simple écran de supervision
- A minima par mail
- Passerelles mail vers *

* Autres étapes
#+ATTR_REVEAL: :frag (appear)
- Escalade
- Contre-mesures automatisées

* Conclusion

???

** Thank you

Question ?

\\

-----
@@html:<small>@@
https://github.com/jpthomasset/poss-monitoring
\\
[[https://twitter.com/misterjp][@misterjp]]
@@html:</small>@@
